<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.marssa</groupId>
	<artifactId>demonstrator-backend</artifactId>
	<version>0.1.0-beta-02-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>demonstrator-backend application</name>

	<modules>
		<module>demonstrator-backend-ejb</module>
		<module>demonstrator-backend-web</module>
		<module>demonstrator-backend-ear</module>
	</modules>

	<licenses>
		<license>
			<name>Apache 2</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>

	<properties>
		<!-- Explicitly declaring the source encoding eliminates the following 
			message: -->
		<!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
			resources, i.e. build is platform dependent! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Define the version of JBoss' Java EE 6 APIs and Tools we want to import. -->
		<jboss.bom.version>1.0.0.Final</jboss.bom.version>
		<!-- Alternatively, comment out the above line, and un-comment the line 
			below to use version 1.0.0.M12-redhat-1 which is a release certified to work 
			with JBoss EAP 6. It requires you have access to the JBoss EAP 6 maven repository. -->
		<!-- <jboss.bom.version>1.0.0.M12-redhat-1</jboss.bom.version>> -->

		<java.version>1.6</java.version>
		<org.marssa.version>0.1.0-beta-02-SNAPSHOT</org.marssa.version>
		<org.slf4j.version>1.6.4</org.slf4j.version>
		<org.restlet.version>2.0.14</org.restlet.version>
	</properties>

	<organization>
		<name>MARSEC-XL International Limited</name>
		<url>http://www.marsec-xl.org/</url>
	</organization>

	<scm>
		<url>https://github.com/marssa/demonstrator-backend</url>
		<connection>git://github.com/marssa/demonstrator-backend.git</connection>
		<developerConnection>scm:git:git@github.com:marssa/demonstrator-backend.git</developerConnection>
	</scm>

	<developers>
		<developer>
			<email>taboneclayton@gmail.com</email>
			<name>Clayton Tabone</name>
			<url>https://github.com/taboneclayton</url>
			<id>taboneclayton</id>
		</developer>
		<developer>
			<email>warren.zahra@marsec-xl.org</email>
			<name>Warren Zahra</name>
			<url>https://github.com/warrenzahra</url>
			<id>warrenzahra</id>
		</developer>
		<developer>
			<email>amanda.fenech@marsec-xl.org</email>
			<name>Amanda Fenech</name>
			<url>https://github.com/Adnama</url>
			<id>Adnama</id>
		</developer>
		<developer>
			<email>alangrech@gmail.com</email>
			<name>Alan Grech</name>
			<url>https://github.com/alangrech</url>
			<id>alangrech</id>
		</developer>
		<developer>
			<email>zak.borg@marsec-xl.org</email>
			<name>Zak Borg</name>
			<url>https://github.com/zakborg</url>
			<id>zakborg</id>
		</developer>
	</developers>

	<issueManagement>
		<system>Redmine</system>
		<url>http://www.marsec-xl-projects.org/projects/demonstrator-backend</url>
	</issueManagement>

	<repositories>
		<!-- Temporary repository containing MARSSA artifacts -->
		<repository>
			<snapshots>
		        <enabled>true</enabled>
	        </snapshots>
			<id>sonatype-nexus-snapshots</id>
			<name>Sonatype Nexus Snapshots</name>
			<url> https://oss.sonatype.org/content/repositories/snapshots</url>
		</repository>
	</repositories>
	
	<dependencyManagement>
		<dependencies>

			<!-- Define the version of the EJB jar so that we don't need to repeat 
				ourselves in every module -->
			<dependency>
				<groupId>org.marssa</groupId>
				<artifactId>demonstrator-backend-ejb</artifactId>
				<version>${project.version}</version>
				<type>ejb</type>
			</dependency>

			<!-- Define the version of the WAR so that we don't need to repeat ourselves 
				in every module -->
			<dependency>
				<groupId>org.marssa</groupId>
				<artifactId>demonstrator-backend-web</artifactId>
				<version>${project.version}</version>
				<type>war</type>
				<scope>compile</scope>
			</dependency>

			<!-- JBoss distributes a complete set of Java EE 6 APIs including a Bill 
				of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection) 
				of artifacts. We use this here so that we always get the correct versions 
				of artifacts. Here we use the jboss-javaee-6.0-with-tools stack (you can 
				read this as the JBoss stack of the Java EE 6 APIs, with some extras tools 
				for your project, such as Arquillian for testing) and the jboss-javaee-6.0-with-hibernate 
				stack you can read this as the JBoss stack of the Java EE 6 APIs, with extras 
				from the Hibernate family of projects) -->
			<dependency>
				<groupId>org.jboss.bom</groupId>
				<artifactId>jboss-javaee-6.0-with-tools</artifactId>
				<version>${jboss.bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.bom</groupId>
				<artifactId>jboss-javaee-6.0-with-hibernate</artifactId>
				<version>${jboss.bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- JSR-303 (Bean Validation) Implementation -->
			<!-- Provides portable constraints such as @Email -->
			<!-- Hibernate Validator is shipped in JBoss AS 7 -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>4.2.0.Final</version>
				<scope>provided</scope>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${org.slf4j.version}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>org.marssa</groupId>
				<artifactId>services</artifactId>
				<version>${org.marssa.version}</version>
			</dependency>

			<!-- Test dependencies -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.10</version>
				<type>jar</type>
				<scope>test</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<!-- Add license header to all files -->
			<plugin>
				<groupId>com.mycila.maven-license-plugin</groupId>
				<artifactId>maven-license-plugin</artifactId>
				<version>1.9.0</version>
				<configuration>
					<header>HEADER</header>
				</configuration>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>format</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!-- Compiler plugin enforces Java 1.6 compatibility and activates annotation 
					processors -->
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.3.2</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
					</configuration>
				</plugin>
				<!-- The JBoss AS plugin deploys your ear to a local JBoss AS container -->
				<!-- Due to Maven's lack of intelligence with EARs we need to configure 
					the jboss-as maven plugin to skip deployment for all modules. We then enable 
					it specifically in the ear module. -->
				<plugin>
					<groupId>org.jboss.as.plugins</groupId>
					<artifactId>jboss-as-maven-plugin</artifactId>
					<version>7.1.1.Final</version>
					<inherited>true</inherited>
					<configuration>
						<skip>true</skip>
					</configuration>
				</plugin>

				<!-- Process external resources -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-remote-resources-plugin</artifactId>
					<version>1.2.1</version>
					<executions>
						<execution>
							<id>process-remote-resources</id>
							<phase>initialize</phase>
							<goals>
								<goal>process</goal>
							</goals>
							<configuration>
								<resourceBundles>
									<resourceBundle>org.marssa:footprint:${org.marssa.version}</resourceBundle>
								</resourceBundles>
								<outputDirectory>${basedir}/src/main/resources</outputDirectory>
								<skip>false</skip>
								<includeProjectProperties>true</includeProjectProperties>
								<attached>true</attached>
								<detail>true</detail>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<!-- Add target/generated-sources/src/main/java to the build path -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.7</version>
					<executions>
						<execution>
							<id>add-source</id>
							<phase>generate-sources</phase>
							<goals>
								<goal>add-source</goal>
							</goals>
							<configuration>
								<sources>
									<source>${basedir}/target/generated-sources/src/main/java</source>
								</sources>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.cxf</groupId>
										<artifactId>cxf-xjc-plugin</artifactId>
										<versionRange>[2.6.0,)</versionRange>
										<goals>
											<goal>xsdtojava</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
